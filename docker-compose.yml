version: "3.9"

# Настройки созданной сети между сервисами
networks:
    fiar_game:
        driver: bridge 

services:
    server:
        container_name: prakticum-server
        image: prakticum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
              SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
          SERVER_PORT: ${SERVER_PORT}
          POSTGRES_HOST: postgres # services.postgres, имя=host для доступа
        env_file:
          - .env
        tty: true
        networks:
          - fiar_game
        depends_on:
          postgres:
            condition: service_healthy

    postgres: # = значение для POSTGRES_HOST
      image: postgres:14     
      ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      #volumes:
      #  - ./tmp/pgdata:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
        interval: 1s
        timeout: 5s
        retries: 10
      env_file:
        - .env
      tty: true
      networks:
          - fiar_game

    pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4:4.18
      restart: always
      # PGADMIN_DEFAULT_EMAIL и PGADMIN_DEFAULT_PASSWORD вводить для авторизации на http://localhost:8080/browser/
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: secret
        PGADMIN_LISTEN_PORT: 80
      ports:
        - "8080:80"
      #volumes:
      #  - ./pgadmin-data:/var/lib/pgadmin 
      depends_on:
        - postgres
      networks:
        - fiar_game

    proxy:
        container_name: prakticum-proxy
        image: prakticum-proxy
        
        build:
            context: .
            dockerfile: Dockerfile.proxy
        restart: always
        ports:
            - "80:8086"
            - "443:443"
        env_file:
          - .env
        tty: true
        networks:
          - fiar_game
        depends_on: #возможно нужны более жесткие проверки на то, стартанул сервер или нет
          - server
       # echo \"`</etc/nginx/nginx.conf`\" &&
        command: bash -c "
                 echo '${SERVER_PORT}' &&
                 envsubst '$${SERVER_PORT} $${CERTIFICATE_PATH} $${CERTIFICATE_PRIVATE_PATH}' < /etc/nginx/templates/default.conf.template > /etc/nginx/nginx.conf &&
                 nginx -g \"daemon off;\""   
        volumes:
          - ./tmp/ssl:/etc/ssl

# Для pgadmin пришлось поставить sudo chmod -R 777 ./pgadmin-data
# Для postgres postgres sudo chmod -R 777 ./tmp/pgdata
# Если делать .gitkeep + папка, то ошибки от postgres
# sudo chmod -R 777 /home/marmar/ssl
